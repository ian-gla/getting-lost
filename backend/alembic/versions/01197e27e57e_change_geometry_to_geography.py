"""change geometry to geography

Revision ID: 01197e27e57e
Revises: 7a590ddcf37e
Create Date: 2025-01-16 12:03:43.204309

"""

from typing import Sequence, Union
from alembic import op
from geoalchemy2 import Geography

# revision identifiers, used by Alembic.
revision: str = "01197e27e57e"
down_revision: Union[str, None] = "7a590ddcf37e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "positions",
        "start",
        schema="lost",
        type_=Geography,
        SRID=4326,
        postgresql_using="ST_GeogFromWKB(start)",
    )
    op.alter_column(
        "positions",
        "lost",
        schema="lost",
        type_=Geography,
        SRID=4326,
        postgresql_using="ST_GeogFromWKB(lost)",
    )
    op.alter_column(
        "positions",
        "end",
        schema="lost",
        type_=Geography,
        SRID=4326,
        postgresql_using='ST_GeogFromWKB("end")',
    )
    op.drop_geospatial_index(
        table_name="positions",
        column_name="start",
        index_name="idx_positions_start",
        if_exists=True,
        schema="lost",
    )
    op.drop_geospatial_index(
        table_name="positions",
        column_name="lost",
        index_name="idx_positions_lost",
        if_exists=True,
        schema="lost",
    )
    op.drop_geospatial_index(
        table_name="positions",
        column_name="end",
        index_name="idx_positions_end",
        if_exists=True,
        schema="lost",
    )
    op.create_geospatial_index(
        "idx_positions_end",
        "positions",
        ["end"],
        unique=False,
        schema="lost",
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_geospatial_index(
        "idx_positions_lost",
        "positions",
        ["lost"],
        unique=False,
        schema="lost",
        postgresql_using="gist",
        postgresql_ops={},
    )
    op.create_geospatial_index(
        "idx_positions_start",
        "positions",
        ["start"],
        unique=False,
        schema="lost",
        postgresql_using="gist",
        postgresql_ops={},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("events", schema="lost")
    op.drop_table("users", schema="lost")
    op.drop_geospatial_index(
        "idx_positions_start",
        table_name="positions",
        schema="lost",
        postgresql_using="gist",
        column_name="start",
    )
    op.drop_geospatial_index(
        "idx_positions_lost",
        table_name="positions",
        schema="lost",
        postgresql_using="gist",
        column_name="lost",
    )
    op.drop_geospatial_index(
        "idx_positions_end", table_name="positions", schema="lost", postgresql_using="gist", column_name="end"
    )
    op.drop_geospatial_table("positions", schema="lost")
    # ### end Alembic commands ###
